name: Build musl-cross-make

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make gcc g++ git tar wget

      - name: Clone musl-cross-make
        run: |
          git clone https://github.com/richfelker/musl-cross-make.git

      - name: Add config.mak with TARGET and OUTPUT
        run: |
          cd musl-cross-make
          echo 'TARGET = x86_64-linux-musl' > config.mak
          echo 'OUTPUT = ../build' >> config.mak

      - name: Build musl-cross-make
        run: |
          cd musl-cross-make
          make

      - name: Install musl-cross-make to build/
        run: |
          cd musl-cross-make
          make install

      - name: Patch GCC specs to use static linking by default
        run: |
          TOOLCHAIN=build/x86_64-linux-musl
          GCC=$TOOLCHAIN/bin/x86_64-linux-musl-gcc
          $GCC -dumpspecs > specs
          # Add -static to default link line
          sed -i '/\*link:/,/^$/ s/^/%{static|static-pie:-static} /' specs
          GCC_LIBDIR=$($GCC -print-libgcc-file-name | sed 's,/libgcc.a,,')
          cp specs $GCC_LIBDIR/specs

      - name: Create symlinks without x86_64-linux-musl- prefix
        run: |
          BIN_DIR=build/x86_64-linux-musl/bin
          for file in $BIN_DIR/x86_64-linux-musl-*; do
            base=$(basename "$file")
            linkname="${base#x86_64-linux-musl-}"
            ln -sf "$base" "$BIN_DIR/$linkname"
          done

      - name: Determine platform info and create tarball
        id: platform
        run: |
          ARCH=$(uname -m)
          if [[ "$ARCH" == "x86_64" ]]; then
            BITS="x64"
          else
            BITS="x32"
          fi
          OS=${{ runner.os }}
          FILENAME="musl-cross-toolchain-${BITS}-${OS}.tar.gz"
          echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"
          tar -czf "$FILENAME" build

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.platform.outputs.filename }}
          path: ${{ steps.platform.outputs.filename }}
